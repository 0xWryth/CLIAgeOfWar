@startuml

title UML - Projet C++

class Game {
    - int _maxTurnLimit
    - int _earnings
    - int _currentTurn
    - string _consoleHeader
    __
    - void initializeGame()
    - void displayPlayer()
    ..
    + Game(int gridSize, int maxTurnLimit, int earnings)
    + void turn()
    + void play(Player p)
    + void resolveActions(Player p)
    + <Player, Player>& getPlayers()
    + Console getConsole()
}
class Console {
    - map<Panel, vector<string>> _panels
    __
    - int getMaxChar()
    ..
    + Console()
    + void addToPanel(string toAppend, Panel position)
    + void display()
    + void clear()
    + string prompt(string message)
}
abstract class Troup {
    # int _nbPiece
    # int _damage
    # int** _reach
    # map<int, Action> _actions
    + int getCost()
    + int getDamage()
    {abstract} string getName(bool isShort)
}
class Grid {
    - int _gridSize
    + Grid(const int gridSize, Game* game)
    + void display()
    + int getGridSize()
}
class GridCase {
    - int position
    + GridCase(int position)
    + bool placeUnit(Troup* unit)
    + bool isEmpty()
    + string getTroupName(bool isShort)
}
class HomeCase {
}
abstract class Health {
    # int _initialHealth
    # int _currentHealth
    + int getCurrentHealth()
}
class Fantassin
class SuperSoldier
class Archer
class Catapult
class Player {
    - string _playerName
    - int _playerId
    - int _coins
    - {static} int _playerNumber
    + Player()
    + string displayStr()
    + void initialize(Console console)
    + void setHomeCase(HomeCase* homeCase)
    + string getFirstLetter()
    + string getName()
    + void incrementCoins(int coins)
    + void decrementCoins(int coins)
    + bool isKO()
    + bool canPlaceTroup()
    + void placeTroupOnHomeCase(Troup* troup)
    + GridCase* getHomeCase()
}
enum Panel {
  Top
  Left
  Right
  Bottom
}
enum Action {
  Attack
  MoveForward
  None
}

Troup <|-- Fantassin
Troup <|-- SuperSoldier
Troup <|-- Archer
Troup <|-- Catapult
GridCase <|-- HomeCase
Health <|-- Troup
Health <|-- HomeCase

Game "1" -- "1" Grid : _grid
Game "1" -- "1" Console : _console
Player "1" -- "1" HomeCase : _playerHome
Grid "1"  -- "2..*" GridCase : _cases
GridCase "1"  -- "0..1" Troup : _troup
Player "0..1"  -- "0..*" GridCase : _playerTroups
Player "2"  -- "1" Game : _players

@enduml